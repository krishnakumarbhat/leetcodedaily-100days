There are two kinds of bots A and B in a 1-D array. A bot can only move left while B can only move right.
There are also empty spaces in between represented by #. But its also given that the bots cannot cross over each other.

Input:
s1 = #B#A#
s2 = ##BA#
Output: Yes
Explanation: Because we can reach the 
final state by moving 'B' to the 
right one step

// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;


 // } Driver Code Ends
//User function Template for Java

class Solution{
    public static String moveRobots(String s1, String s2){
        //code here
       int i=0,j=0,n=s1.length();
       while(i<n && j<n)
       {
           while(i<n && s1.charAt(i)=='#')
           {
               i++;
           }
           while(j<n && s2.charAt(j)=='#')
           {
               j++;
           }
           if(i<n && j<n)
           {
               if(s1.charAt(i)!=s2.charAt(j))
               {
                   return "No";
                   
               }
               else if((s1.charAt(i)=='A' && j>i) || (s1.charAt(j)=='B' && j<i))
               {
                   return "No";
                   
               }
               else
               {
                   i++;
                   j++;
               }
           }
       }
       return (i==n || j==n)?"Yes":"No";
    }
}


// { Driver Code Starts.

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while(t-- > 0)
        {
            String s1=read.readLine();
            String s2=read.readLine();

            Solution ob = new Solution();
            System.out.println(ob.moveRobots(s1, s2));
        }
    }
}  // } Driver Code Ends
