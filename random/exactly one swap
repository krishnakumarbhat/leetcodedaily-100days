
Given a string S containing lowercase english alphabet characters. The task is to 
calculate the number of distinct strings that can be obtained after performing exactly one swap.
In one swap,Geek can pick two distinct index i and j (i.e 1 < i < j < |S| ) of the string,
then swap the characters at the position i and j.


map<long long ,long long> m;
       for(int i=0; i<s.length();i++){
           m[s[i] - 'a']++;
   }
   long long rem = 0;
   for(auto x:m){
       long long  r = x.second;
       rem += r*(r-1)/2;
   }
   long long n = s.length();
   if(rem > 0){
       return 1 + (n*(n-1))/2 - rem;
   }
   else{
       return (n*(n-1))/2;
    }
